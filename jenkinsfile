pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'my-java-app:latest'
        EC2_USER = credentials('ec2-ssh-key') // Refers to the SSH private key stored
        EC2_HOST = 'your-ec2-instance-ip'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                script {
                    // Build the Java application using Maven
                    sh 'mvn clean package'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image on the Jenkins instance (EC2)
                    sh "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }
        stage('Deploy Docker Container') {
            steps {
                script {
                    // Deploy Docker container on the same EC2 instance
                    sh """
                        docker stop ${DOCKER_IMAGE} || true
                        docker rm ${DOCKER_IMAGE} || true
                        docker run -d --name ${DOCKER_IMAGE} -p 8080:8080 ${DOCKER_IMAGE}
                    """
                }
            }
        }
    }
    post {
        always {
            // Clean up workspace
            cleanWs()
        }
    }
}
